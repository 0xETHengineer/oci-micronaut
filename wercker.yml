# The container definition we want to use for developing our app
box:
  id: busybox

build:
  steps:

build-catalogue:
  steps:
    - internal/docker-build:
        context: src/catalogue
        image-name: $REPOSITORY/catalogue

push-catalogue:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - internal/docker-push:
        image-name: $REPOSITORY/catalogue
        tag: $WERCKER_GIT_COMMIT
        username: $USERNAME
        password: $PASSWORD
        registry: https://phx.ocir.io/v2
        repository: $REPOSITORY/catalogue

build-user:
  steps:
    - internal/docker-build:
        context: src/user
        image-name: $REPOSITORY/user

push-user:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - internal/docker-push:
        image-name: $REPOSITORY/user
        tag: $WERCKER_GIT_COMMIT
        username: $USERNAME
        password: $PASSWORD
        registry: https://phx.ocir.io/v2
        repository: $REPOSITORY/user

build-payment:
  box:
    id: golang:1.12
    ports:
      - "5000"
  steps:
    - script:
        name: go build
        code: |
          pwd

push-payment:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - internal/docker-push:
        image-name: $REPOSITORY/payment
        tag: $WERCKER_GIT_COMMIT
        username: $USERNAME
        password: $PASSWORD
        registry: https://phx.ocir.io/v2
        repository: $REPOSITORY/payment

build-storefront:
  steps:
    - internal/docker-build:
        context: src/storefront
        image-name: $REPOSITORY/storefront

push-storefront:
  steps:
    - internal/docker-push:
        image-name: $REPOSITORY/storefront
        tag: $WERCKER_GIT_COMMIT
        username: $USERNAME
        password: $PASSWORD
        registry: https://phx.ocir.io/v2
        repository: $REPOSITORY/storefront

test-catalogue:
  box:
    id: golang:1.12
  steps:
    - script:
        name: Run tests
        code: |
          cd src/catalogue
          go test -v ./...

test-user:
  box:
    id: golang:1.12
  steps:
    - script:
        name: Run tests
        code: |
          cd src/user
          # enable once MongoDB is mocked (or replaced with ATP)
          # go test -v ./...

test-payment:
  box:
    id: golang:1.12
  steps:
    - script:
        name: Run tests
        code: |
          cd src/payment
          go test -v ./...

test-storefront:
  box:
    id: node:10-alpine
  steps:
    - script:
        name: Change to storefront
        code: |
          cd src/storefront
          npm install
          npm test

# TODO: Update the existing production deployment of Mushop
update-deployment:
  box:
    id: alpine
    cmd: /bin/sh
  steps:
    - script:
        name: Step one
        code: |
          echo "hello"
