apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "assets.fullname" . }}
  labels:
{{ include "assets.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/name: {{ include "assets.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.image.tag | quote }}
        app.kubernetes.io/name: {{ include "assets.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: {{ .Values.global.serviceAccount | default .Values.serviceAccount | default (printf "default") }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}-{{ .Values.global.cloud }}-{{ .Values.global.imageSuffix | default .Values.image.suffix }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
          {{- $cloud := .Values.cloud | default (.Values.global.cloud | default (printf "oci")) }}
          {{- if eq "oci" $cloud }}
            {{- include "assets.oapm.connection" . | nindent 12 }}
            {{- include "assets.oims.config" . | nindent 12 }}
            {{- include "assets.oos.config" . | nindent 12 }}
          {{- end }}
      nodeSelector:
        beta.kubernetes.io/os: linux
