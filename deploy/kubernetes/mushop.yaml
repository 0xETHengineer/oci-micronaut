---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: edge
  labels:
    name: edge
    layer: client
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: edge
        layer: client
    spec:
      containers:
      - name: edge
        image: phx.ocir.io/intvravipati/mushop/edge-router:1
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: edge
  labels:
    name: edge
    layer: client
spec:
  selector:
    name: edge
    layer: client
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    name: api
    layer: client
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: api
        layer: client
    spec:
      containers:
      - name: api
        image: phx.ocir.io/intvravipati/mushop/api:2.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: SESSION_REDIS
          value: session
        - name: CATALOGUE_URL
          value: http://catalogue
        - name: ORDERS_URL
          value: http://orders
        - name: CARTS_URL
          value: http://carts
        - name: USERS_URL
          value: http://user
        - name: STATIC_MEDIA_URL
          value: https://objectstorage.us-phoenix-1.oraclecloud.com/n/intvravipati/b/mushop-images/o/
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    name: api
    layer: client
spec:
  selector:
    name: api
    layer: client
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: session
  labels:
    name: session
    layer: client
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: session
        layer: client
    spec:
      containers:
      - name: session
        image: redis:alpine
        ports:
        - name: redis
          containerPort: 6379
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: session
  labels:
    name: session
    layer: client
spec:
  ports:
  - port: 6379
  selector:
    name: session
    layer: client
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: carts
    spec:
      containers:
      - name: carts
        image: phx.ocir.io/intvravipati/mushop/carts:1.0.1
        ports:
         - containerPort: 80
        env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:+UseG1GC -Dlogging.level.mushop.carts=TRACE  -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
        - name: TNS_ADMIN
          value: /app/config
        - name: OADB_USER
          valueFrom:
            secretKeyRef:
              name: carts-oadb-connection
              key: oadb_user
        - name: OADB_PW
          valueFrom:
            secretKeyRef:
              name: carts-oadb-connection
              key: oadb_pw
        - name: OADB_SERVICE
          valueFrom:
            secretKeyRef:
              name: carts-oadb-connection
              key: oadb_service   
        - name: ATP_TRUST_PASS
          valueFrom:
            secretKeyRef:
              name: carts-oadb-connection
              key: oadb_wallet_pw 
        - name: ATP_KEY_PASS
          valueFrom:
            secretKeyRef:
              name: carts-oadb-connection
              key: oadb_wallet_pw
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /app/config/keystore.jks
          subPath: keystore.jks
          name: wallet
          readOnly: true
        - mountPath: /app/config/truststore.jks
          subPath: truststore.jks
          name: wallet
          readOnly: true
        - mountPath: /app/config/tnsnames.ora
          subPath: tnsnames.ora
          name: wallet
          readOnly: true
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        - name: wallet
          secret:
            secretName: carts-oadb-wallet
            defaultMode: 256
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    name: carts
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: carts
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels:
    name: catalogue
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue
  template:
    metadata:
      labels:
        name: catalogue
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: catalogue
          image: phx.ocir.io/intvravipati/mushop/catalogue:1.1
          imagePullPolicy: Always
          command: ["/app"]
          args:
          - -port=80
          ports:
          - containerPort: 80
          env:
          - name: ZIPKIN
            value:
          - name: OADB_USER
            valueFrom:
              secretKeyRef:
                name: catalogue-oadb-connection
                key: oadb_user
          - name: OADB_PW
            valueFrom:
              secretKeyRef:
                name: catalogue-oadb-connection
                key: oadb_pw
          - name: OADB_SERVICE
            valueFrom:
              secretKeyRef:
                name: catalogue-oadb-connection
                key: oadb_service
          securityContext:
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          volumeMounts:
          - name: wallet
            mountPath: "/usr/lib/oracle/19.3/client64/lib/network/admin"
      volumes:
      - name: wallet
        secret:
          secretName: catalogue-oadb-wallet
          defaultMode: 256
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    name: catalogue
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: catalogue
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: storefront
  labels:
    name: storefront
    layer: client
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: storefront
        layer: client
    spec:
      containers:
      - name: storefront
        image: phx.ocir.io/intvravipati/mushop/storefront:2.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        - name: status
          containerPort: 8888
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: storefront
  labels:
    name: storefront
    layer: client
spec:
  selector:
    name: storefront
    layer: client
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders
  labels:
    name: orders
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orders
    spec: 
      containers:
      - name: orders
        image: phx.ocir.io/intvravipati/mushop/orders:1.0.2
        imagePullPolicy: Always
        env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: -Xms128m -Xmx256m -XX:+UseG1GC -Dlogging.level.mushop.orders=TRACE  -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
        - name: TNS_ADMIN
          value: /app/config
        - name: OADB_USER
          valueFrom:
            secretKeyRef:
              name: orders-oadb-connection
              key: oadb_user
        - name: OADB_PW
          valueFrom:
            secretKeyRef:
              name: orders-oadb-connection
              key: oadb_pw
        - name: OADB_SERVICE
          valueFrom:
            secretKeyRef:
              name: orders-oadb-connection
              key: oadb_service   
        - name: ATP_TRUST_PASS
          valueFrom:
            secretKeyRef:
              name: orders-oadb-connection
              key: oadb_wallet_pw 
        - name: ATP_KEY_PASS
          valueFrom:
            secretKeyRef:
              name: orders-oadb-connection
              key: oadb_wallet_pw
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /app/config/keystore.jks
          subPath: keystore.jks
          name: wallet
          readOnly: true
        - mountPath: /app/config/truststore.jks
          subPath: truststore.jks
          name: wallet
          readOnly: true
        - mountPath: /app/config/tnsnames.ora
          subPath: tnsnames.ora
          name: wallet
          readOnly: true
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        - name: wallet
          secret:
            secretName: orders-oadb-wallet
            defaultMode: 256
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    name: orders
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: orders
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: payment
  labels:
    name: payment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: payment
    spec:
      containers:
      - name: payment
        image: phx.ocir.io/intvravipati/mushop/payment:0.0.1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 99m
            memory: 100Mi
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    name: payment
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: payment
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: stream
  name: stream
spec:
  replicas: 1
  selector:
    matchLabels:
      run: stream
  template:
    metadata:
      labels:
        run: stream
    spec:
      containers:
      - image: phx.ocir.io/intvravipati/mushop/stream:1.0.0
        imagePullPolicy: Always
        name: stream
        env:
        - name: STREAM_NAME
          valueFrom:
            secretKeyRef:
              name: oss-connection
              key: streamName
              optional: true
        - name: STREAM_ID
          valueFrom:
            secretKeyRef:
              name: oss-connection
              key: streamId
              optional: true
        - name: OCI_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_tenant_id
        - name: OCI_USER_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_user_id
        - name: OCI_FINGERPRINT
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_fingerprint
        - name: OCI_PASS_PHRASE
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_pass_phrase
              optional: true
        - name: OCI_API_KEY
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_api_key
        - name: OCI_REGION
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_region
        - name: OCI_COMPARTMENT_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_compartment_id
        ports:
        - containerPort: 80
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: stream
  name: stream
  annotations:
    prometheus.io/path: "/prometheus"
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    #nodePort: 30124
  selector:
    run: stream
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: shipping
  name: shipping
spec:
  replicas: 1
  selector:
    matchLabels:
      run: shipping
  template:
    metadata:
      labels:
        run: shipping
    spec:
      containers:
      - image: phx.ocir.io/intvravipati/mushop/shipping:1.0.0
        imagePullPolicy: Always
        name: shipping
        env:
        - name: STREAM_NAME
          valueFrom:
            secretKeyRef:
              name: oss-connection
              key: streamName
              optional: true
        - name: STREAM_ID
          valueFrom:
            secretKeyRef:
              name: oss-connection
              key: streamId
              optional: true
        - name: OCI_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_tenant_id
        - name: OCI_USER_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_user_id
        - name: OCI_FINGERPRINT
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_fingerprint
        - name: OCI_PASS_PHRASE
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_pass_phrase
              optional: true
        - name: OCI_API_KEY
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_api_key
        - name: OCI_REGION
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_region
        - name: OCI_COMPARTMENT_ID
          valueFrom:
            secretKeyRef:
              name: streams-secret
              key: oci_compartment_id
        ports:
        - containerPort: 80
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: shipping
  name: shipping
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: shipping
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
  labels:
    name: user
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user
    spec:
      containers:
      - name: user
        image: phx.ocir.io/intvravipati/mushop/user:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: OADB_USER
          valueFrom:
            secretKeyRef:
              name: user-oadb-connection
              key: oadb_user
        - name: OADB_PW
          valueFrom:
            secretKeyRef:
              name: user-oadb-connection
              key: oadb_pw
        - name: OADB_SERVICE
          valueFrom:
            secretKeyRef:
              name: user-oadb-connection
              key: oadb_service
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 300
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: wallet
          mountPath: /usr/lib/oracle/19.3/client64/lib/network/admin
          readOnly: true
      volumes:
      - name: wallet
        secret:
          secretName: user-oadb-wallet
          defaultMode: 256
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    name: user
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    name: user

