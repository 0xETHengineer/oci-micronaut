apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  labels:
{{ include "api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      layer: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        layer: client
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
          env:
          - name: MOCK_MODE
            value: {{ .Values.global.mock.service }}
          - name: SESSION_REDIS
            value: {{ .Release.Name }}-session
          - name: CATALOGUE_URL
            value: http://{{ .Release.Name }}-catalogue
          - name: ORDERS_URL
            value: http://{{ .Release.Name }}-orders
          - name: CARTS_URL
            value: http://{{ .Release.Name }}-carts
          - name: USERS_URL
            value: http://{{ .Release.Name }}-user
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
