plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.4.0"
}

group = "micronaut.mushop"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("events.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-validation")

    // Metrics - Core
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    // Metrics - OCI
    runtimeOnly("io.micronaut.oraclecloud:micronaut-oraclecloud-micrometer")

    // Metrics - AWS
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-cloudwatch")

    // Tracing
    implementation("io.micronaut.tracing:micronaut-tracing-core")
    implementation("io.micronaut.tracing:micronaut-tracing-zipkin")

    // Streaming
    implementation("io.micronaut.kafka:micronaut-kafka")

    // AWS - Kafka IAM
    implementation 'software.amazon.msk:aws-msk-iam-auth:1.0.0'

    // AWS - Configuration discovery
    implementation("io.micronaut.aws:micronaut-aws-secretsmanager")
    implementation("io.micronaut.aws:micronaut-aws-parameter-store")

    // AWS - authentication
    implementation("software.amazon.awssdk:sts")


    testImplementation "org.testcontainers:testcontainers:1.15.2"
    testImplementation "org.testcontainers:kafka:1.15.2"
    testImplementation "org.testcontainers:junit-jupiter:1.15.2"
    testImplementation 'org.awaitility:awaitility:4.0.3'
    runtimeOnly("ch.qos.logback:logback-classic")
}

application {
    mainClass.set("events.Application")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

if (javaBaseImage == "graalvm") {
    dockerfile {
        baseImage = "phx.ocir.io/oraclelabs/micronaut-showcase/mushop/base/graalvm-ce:java11-21.1.0"
    }
} else {
    dockerfile {
        baseImage = "phx.ocir.io/oraclelabs/micronaut-showcase/mushop/base/openjdk:16-alpine"
    }
}

dockerBuild {
    images = ["phx.ocir.io/oraclelabs/micronaut-showcase/mushop/$project.name-${javaBaseImage}:$project.version"]
}

dockerBuildNative {
    images = ["phx.ocir.io/oraclelabs/micronaut-showcase/mushop/${project.name}-native:$project.version"]
}
