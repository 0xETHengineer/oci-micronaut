# https://github.com/helm/charts/blob/master/stable/metrics-server/README.md
metrics-server:
  enabled: true
  args: [
    # not recommended in production
    --kubelet-insecure-tls,
    --kubelet-preferred-address-types=InternalIP
  ]

# https://github.com/helm/charts/blob/master/stable/prometheus/README.md
prometheus:
  enabled: true
  extraScrapeConfigs: |
    - job_name: 'ingress-nginx'
      metrics_path: /metrics
      scrape_interval: 5s
      static_configs:
        - targets:
          - {{ .Release.Name }}-ingress-nginx-controller-metrics:9913

# https://github.com/kubernetes-sigs/service-catalog/blob/master/charts/catalog/README.md
catalog:
  enabled: true

# https://kubernetes.github.io/ingress-nginx/
ingress-nginx:
  enabled: true
  controller:
    metrics:
      enabled: true

# https://github.com/jetstack/cert-manager/blob/master/README.md
cert-manager:
  enabled: true
  installCRDs: true

# https://github.com/helm/charts/blob/master/stable/grafana/README.md
grafana:
  enabled: true
  dashboards:
    default:
      cluster-metrics:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      pods:
        gnetId: 6336
        revision: 1
        datasource: Prometheus
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  sidecar:
    datasources:
      enabled: true
      label: grafana_datasource
    dashboards:
      enabled: true
      label: grafana_dashboard
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
  persistence:
    enabled: true
  plugins:
    - oci-datasource
    - grafana-kubernetes-app
    - grafana-worldmap-panel
    - grafana-piechart-panel
    - btplc-status-dot-panel

# https://github.com/helm/charts/blob/master/stable/jenkins/README.md
jenkins:
  enabled: true
  master:
    componentName: "jenkins-master"
    image: "jenkins/jenkins"
    tag: "lts"
    numExecutors: 0
    adminUser: "admin"
    adminPassword: "Welcome1"
    resources:
      requests:
        cpu: "1000m"
        memory: "2048Mi"
      limits:
        cpu: "2000m"
        memory: "4096Mi"
    hostAliases: []
    # Use ClusterIP if your setup includes ingress controller
    serviceType: ClusterIP
    slaveListenerPort: 50000
    jenkinsUriPrefix: "/jenkins"
    ingress:
      enabled: true
      paths:
        - path: /jenkins
          backend:
            serviceName: >-
              {{ template "jenkins.fullname" . }}
            servicePort: 8080

      #hostName: build.voicea.app
      # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
      apiVersion: "networking.k8s.io/v1beta1"
      labels: {}
      annotations:
        kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
        # certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        # ingress.kubernetes.io/secure-backends: "true"
      # tls:
      #  - secretName: build.voicea.app
      #    hosts:
      #      - build.voicea.app
    installPlugins:
      - kubernetes:1.26.1
      - workflow-job:2.39
      - workflow-aggregator:2.6
      - credentials-binding:1.23
      - git:4.2.2
      - configuration-as-code:1.41
      - blueocean:1.23.2