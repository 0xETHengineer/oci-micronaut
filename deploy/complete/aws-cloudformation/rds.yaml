AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::SecretsManager-2020-07-23
Description: Deploys the RDS cluster with MySQL databse for MuShop services
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: RDS configuration
        Parameters:
          - DBInstanceClass
          - DBAllocatedStorage
          - RandomStringLambdaFunctionArn
      - Label:
          default: RDS networking configuration
          Parameters:
            - VPCID
            - PrivateSubnet1ID
            - PrivateSubnet2ID
            - PrivateSubnet3ID
            - NodeGroupSecurityGroup
    ParameterLabels:
      DBInstanceClass:
        default: Database instance class
      DBAllocatedStorage:
        default: The size of the database (GiB)
      VPCID:
        default: VPC ID
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID (in case of 3AZ deployment)
      RandomStringLambdaFunctionArn:
        default: ARN of lambda function that generates random strings
      NodeGroupSecurityGroup:
        default: Security group to allow access from to RDS
Parameters:
  DBInstanceClass:
    Default: db.m5.large
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.
  DBAllocatedStorage:
    Default: '50'
    Description: The size of the database (GiB)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 20 and 65536 GiB.
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Private subnet for doc db instances"
  PrivateSubnet2ID:
    Type: String
    Default: ""
    Description: "Private subnet for doc db instances"
  PrivateSubnet3ID:
    Type: String
    Default: ""
    Description: "Private subnet for doc db instances"
  VPCID:
    Type: String
    Description: "VPC of subnets and security group."
  NodeGroupSecurityGroup:
    Type: String
    Description: "Security group of EKS nodes"
  RandomStringLambdaFunctionArn:
    Type: String
    Description: Random string lambda function arn
Resources:

  # This opens the port for ingress traffic from the specified IP cidr.
  EksSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open database for access
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref NodeGroupSecurityGroup
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  # Database subnet group for the RDS instance
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "DB Subnet group"
      SubnetIds:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  # Generate RDS Admin password
  RdsAdminPassword:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      Length: 16
      RDSCompatible: true
      Punctuation: false
      ServiceToken: !Ref RandomStringLambdaFunctionArn

  # This is an RDS instance resource. Its master username and password use dynamic references to resolve values from
  # SecretsManager. The dynamic reference guarantees that CloudFormation will not log or persist the resolved value
  # We sub the Secret resource's logical id in order to construct the dynamic reference, since the Secret's name is being #generated by CloudFormation
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: mysql
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      MasterUsername: 'admin'
      MasterUserPassword: !GetAtt RdsAdminPassword.RandomString
      BackupRetentionPeriod: 0
      VPCSecurityGroups:
        - Ref: EksSecurityGroup
      PubliclyAccessible: true

Outputs:
  RDSPort:
    Value: !GetAtt DBInstance.Endpoint.Port
  RDSAddress:
    Value: !GetAtt DBInstance.Endpoint.Address
  RDSAdminUser:
    Value: 'admin'
  RDSAdminPass:
    Value: !GetAtt RdsAdminPassword.RandomString
